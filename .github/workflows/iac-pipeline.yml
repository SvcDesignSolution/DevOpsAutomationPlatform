name: Create Resources by IAC tools 

env:
  STATE: "create"    # 可以根据需要更改初始状态, 可选create，update, destroy
  CLOUD: "gcp"       # 选择云服务商, 可选: gcp, aws, ali, azure

on:
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main

jobs:
  gcs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: IAC/modules/terraform/${{ env.CLOUD }}/gcs/

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.6.4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_JSON }}'

    - name: Terraform Init And Apply
      env:
        GOOGLE_CREDENTIALS: "${{ secrets.GCP_CREDENTIALS_JSON }}"
      run: |
        terraform init
        if [ "$STATE" == "create" ]; then
            terraform apply -auto-approve
        elif [ "$STATE" == "destroy" ]; then
            terraform destroy -auto-approve
        # Add handling for other states as needed
        else
            echo "Invalid environment state"
            exit 1
        fi

  vpc:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: IAC/modules/terraform/${{ env.CLOUD }}/vpc/
    needs:
      - gcs

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.6.4

    - name: Terraform Init And Apply
      env:
        GOOGLE_CREDENTIALS: "${{ secrets.GCP_CREDENTIALS_JSON }}"
      run: |
        terraform init
        if [ "$STATE" == "create" ]; then
            terraform apply -auto-approve
        elif [ "$STATE" == "destroy" ]; then
            terraform destroy -auto-approve
        # Add handling for other states as needed
        else
            echo "Invalid environment state"
            exit 1
        fi
